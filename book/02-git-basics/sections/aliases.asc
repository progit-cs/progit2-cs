[[_git_aliases]]
=== Aliasy v Gitu

(((aliases)))
Než ukončíme tuto kapitolu věnovanou základům práce s Gitem, máme tu ještě jeden malý tip, který může učinit vaši práci s Gitem jednodušší, snazší a osobnější: aliasy.
V dalších částech knihy se na ně nebudeme odkazovat, ani nebudeme předpokládat, že je umíte používat, ale asi byste o nich měli vědět.

Jestliže zadáte neúplný příkaz, Git si ho automaticky nedoplní.
Pokud nechcete zadávat celý text gitových příkazů, můžete pomocí `git config` jednoduše nastavit pro každý příkaz tzv. alias.(((git příkazy, config)))
Tady je pár příkladů, které možná budete chtít nastavit:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

To znamená, že například místo kompletního příkazu `git commit` stačí zadat pouze zkrácené `git ci`.
Během používání Gitu budete asi častěji používat i jiné příkazy. Neváhejte a vytvořte si pro ně nové aliasy.

Tato metoda může být velmi užitečná také k vytváření příkazů, které by podle vás měly existovat.
Pokud jste například narazili na problém s používáním příkazu pro vrácení souboru z oblasti připravených změn, můžete ho vyřešit přidáním vlastního aliasu:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Po zadání takového příkazu budete mít k dispozici dva ekvivalentní příkazy:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Příkaz `unstage` vypadá srozumitelněji.
Běžně se také přidává příkaz `last`:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Tímto způsobem snadno zobrazíte poslední revizi:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Jak tušíte, Git jednoduše nahradí nový příkaz čímkoliv, co jste aliasem pojmenovali.
Může se však stát, že budete chtít spustit externí příkaz, a ne dílčí příkaz Git.
V takovém případě zadejte na začátek příkazu znak `!`.
To je užitečné v případech, kdy si píšete své vlastní nástroje, které s repozitářem Gitu pracují.
Můžeme si to předvést vytvořením aliasu `git visual` pro spuštění `gitk`:

[source,console]
----
$ git config --global alias.visual '!gitk'
----
